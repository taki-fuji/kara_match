{"ast":null,"code":"var _jsxFileName = \"/Users/kakizakiaito/kara-match/kara_match/frontend/kara-match-front/src/components/itunes_API_test_components/Search.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport qs from 'qs';\nimport axios from 'axios';\n\n// modulesをインポート\nimport ErrorPage from './modules/Error';\nimport NoResult from './modules/No_result';\nimport Result from './modules/Result';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = () => {\n  _s();\n  // 検索キーワードを保持するためのstate\n  const [keyword, setKeyword] = useState('');\n  // APIコール状態を管理するstate\n  const [resultType, setResultType] = useState('init');\n  // 検索結果を入れるstate\n  const [items, setItems] = useState([]);\n  const apiClient = axios.create({\n    baseURL: \"https://itunes.apple.com\"\n  });\n  const handleSearch = async () => {\n    const params = {\n      keyword,\n      media: \"music\",\n      entity: \"musicTrack\",\n      country: \"jp\",\n      lang: \"ja_jp\",\n      limit: \"50\"\n    };\n    console.log(params.keyword);\n    // baseURLに設定したparamsを使ってgetリクエストを送信\n    try {\n      const response = await apiClient.get(`/search?${qs.stringify(params)}`);\n      console.log('/search?$' + qs.stringify(params));\n      console.log(response); //APIのレスポンスをテスト出力\n\n      const {\n        data\n      } = response;\n      console.log(data.resultCount);\n      //以下の条件分岐でgetの結果がどうなったのかをresultTyleに保持する\n      if (data.resultCount === 0) {\n        //検索結果がない時\n        setResultType('no_result');\n      } else {\n        //検索が成功した時\n        setResultType('success');\n        setItems(data.results);\n      }\n    } catch (error) {\n      //getリクエストがエラーだった時\n      console.log(\"error in components/itunes_API/Search.jsx at handleSerch() while get with itunes API\");\n      console.log(error);\n      setResultType('failure');\n    }\n  };\n\n  // 検索窓の入力が行われたときに、入力された値をkeyword stateに格納する関数\n  const handleChange = event => {\n    setKeyword(event.target.value);\n  };\n\n  // APIとの通信ができたかどうかで表示するコンポーネントを変更する関数\n  const switchView = () => {\n    switch (resultType) {\n      case \"no_result\":\n        return /*#__PURE__*/_jsxDEV(NoResult, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 24\n        }, this);\n      case \"success\":\n        return /*#__PURE__*/_jsxDEV(Result, {\n          items: items\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 24\n        }, this);\n      case \"failure\":\n        return /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 24\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u691C\\u7D22\\u3057\\u3066\\u307F\\u3088\\u3046!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 24\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"search-input\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"search-botton\",\n      onClick: handleSearch,\n      children: \"\\u691C\\u7D22\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), switchView()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(Search, \"76baQfPOFpIMCgZlu7S3Cqb3fAA=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","qs","axios","ErrorPage","NoResult","Result","Search","keyword","setKeyword","resultType","setResultType","items","setItems","apiClient","create","baseURL","handleSearch","params","media","entity","country","lang","limit","console","log","response","get","stringify","data","resultCount","results","error","handleChange","event","target","value","switchView"],"sources":["/Users/kakizakiaito/kara-match/kara_match/frontend/kara-match-front/src/components/itunes_API_test_components/Search.jsx"],"sourcesContent":["import React, {useState} from 'react'\nimport qs from 'qs';\nimport axios from 'axios';\n\n// modulesをインポート\nimport ErrorPage from './modules/Error';\nimport NoResult from './modules/No_result';\nimport Result from './modules/Result';\n\nconst Search = () => {\n    // 検索キーワードを保持するためのstate\n    const [keyword, setKeyword] = useState('');\n    // APIコール状態を管理するstate\n    const [resultType, setResultType] = useState('init')\n    // 検索結果を入れるstate\n    const [items, setItems] = useState([])\n\n    const apiClient = axios.create({\n        baseURL: \"https://itunes.apple.com\",\n    });\n    \n    const handleSearch = async() => {\n        const params = {\n            keyword,\n            media: \"music\",\n            entity: \"musicTrack\",\n            country: \"jp\",\n            lang: \"ja_jp\",\n            limit: \"50\"\n        };\n        console.log(params.keyword)\n        // baseURLに設定したparamsを使ってgetリクエストを送信\n        try{\n            const response = await apiClient.get(`/search?${qs.stringify(params)}`);\n            console.log('/search?$'+qs.stringify(params))\n            console.log(response)//APIのレスポンスをテスト出力\n\n            const {data} = response;\n            console.log(data.resultCount)\n            //以下の条件分岐でgetの結果がどうなったのかをresultTyleに保持する\n            if(data.resultCount === 0){//検索結果がない時\n                setResultType('no_result')\n            }else{//検索が成功した時\n                setResultType('success')\n                setItems(data.results)\n            }\n        }catch(error){//getリクエストがエラーだった時\n            console.log(\"error in components/itunes_API/Search.jsx at handleSerch() while get with itunes API\")\n            console.log(error)\n            setResultType('failure')\n        }\n        \n    }\n\n    // 検索窓の入力が行われたときに、入力された値をkeyword stateに格納する関数\n    const handleChange = (event) => {\n        setKeyword(event.target.value)\n    }\n\n    // APIとの通信ができたかどうかで表示するコンポーネントを変更する関数\n    const switchView = () => {\n        switch(resultType){\n            case \"no_result\":\n                return <NoResult />\n            case \"success\":\n                return <Result items={items}/>\n            case \"failure\":\n                return <ErrorPage />\n            default:\n                return <p>検索してみよう!</p>\n        }\n    }\n\n  return (\n    <div>\n        <input \n            type=\"text\"\n            className=\"search-input\"\n            onChange={handleChange}\n        />\n\n        <button className=\"search-botton\" onClick={handleSearch}>検索</button>\n        {switchView()}\n    </div>\n  )\n}\n\nexport default Search"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}